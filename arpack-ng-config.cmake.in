# Config file for the arpack-ng package.
#
# To use arpack from CMake, use ARPACK::ARPACK target:
#   find_package(arpack-ng)
#   add_executable(main main.f)
#   target_include_directories(main PUBLIC ARPACK::ARPACK)
#   target_link_libraries(main ARPACK::ARPACK)
#
# To use parpack from CMake, use PARPACK::PARPACK target:
#   find_package(arpack-ng)
#   add_executable(main main.f)
#   target_include_directories(main PUBLIC PARPACK::PARPACK)
#   target_link_libraries(main PARPACK::PARPACK)

# Create local variables.
set(prefix "@prefix@")
set(exec_prefix "@exec_prefix@")
set(libdir "@libdir@")
set(includedir "@includedir@")

set(arpack_ng_INCLUDE_DIRS "${includedir}/arpack;${MPI_Fortran_INCLUDE_DIRS};${MPI_C_INCLUDE_DIRS};${MPI_CXX_INCLUDE_DIRS}")

if(EXISTS "${libdir}/libarpack.a")
  set(arpack_ng_LIBRARIES "${libdir}/libarpack.a")
elseif(EXISTS "${libdir}/libarpack.so")
  set(arpack_ng_LIBRARIES "${libdir}/libarpack.so")
endif()

if(EXISTS "${libdir}/libparpack.a")
  set(parpack_ng_LIBRARIES "${libdir}/libparpack.a;${arpack_ng_LIBRARIES};${MPI_Fortran_LIBRARIES};${MPI_C_LIBRARIES};${MPI_CXX_LIBRARIES}")
elseif(EXISTS "${libdir}/libparpack.so")
  set(parpack_ng_LIBRARIES "${libdir}/libparpack.so;${arpack_ng_LIBRARIES};${MPI_Fortran_LIBRARIES};${MPI_C_LIBRARIES};${MPI_CXX_LIBRARIES}")
endif()

# Create arpack targets.
add_library(ARPACK::ARPACK INTERFACE IMPORTED)
set_target_properties(ARPACK::ARPACK PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${arpack_ng_INCLUDE_DIRS}")
set_target_properties(ARPACK::ARPACK PROPERTIES INTERFACE_LINK_LIBRARIES      "${arpack_ng_LIBRARIES}")
add_library(PARPACK::PARPACK INTERFACE IMPORTED)
set_target_properties(PARPACK::PARPACK PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${arpack_ng_INCLUDE_DIRS}")
set_target_properties(PARPACK::PARPACK PROPERTIES INTERFACE_LINK_LIBRARIES      "${parpack_ng_LIBRARIES}")
